# -[[ Lab Information ]]- #
LAB_VERSION="1"
LAB_AUTHOR="Callum Basham"
LAB_EMAIL="Callum.Basham@warwick.ac.uk"
LAB_WEB="https://github.com/CallumBasham"
LAB_DESCRIPTION="Initial Tor Lab for Building Research and Understanding"

# -[[ Memory Allocation ]]- #
# Official Minimum requirements for a relay dennote 512 MB of RAM, however as these UML nodes will run nothing execpt Tor and basic operational modules, we will attempt with slightly less. 
# source: https://community.torproject.org/relay/relays-requirements/
# source: https://tor.stackexchange.com/questions/15976/system-requirement-for-dedicated-tor-system
dirauth1[mem]=350
dirauth2[mem]=350
dirauth3[mem]=350
relay1[mem]=350
relay2[mem]=350
relay3[mem]=350
relay4[mem]=350
relay5[mem]=350
websrv[mem]=128


# -[[ Collision Domain Allocation ]]- #
# WAN
# 	Simulate "the internet" through three routers which also partially act as an ISP's node
router1[0]=wan
router2[0]=wan
router3[0]=wan

# WAN > ClientNet
# 	Build a LAN for the client side, obviously a client won't reside on the "internet" where Tor nodes have public IP's, therefore we will simulate a client behind a NAT router. 
router1[1]=clinet
client[0]=clinet

# WAN > WebNet
#	Similarly to the Client Network, create another LAN (business type), which hosts a web server behind a firewall/router which incorporates port-forwarding for 80/443 traffic. 
router2[1]=webnet
websrv[0]=webnet

# WAN > TorNet
#	Create a generic "internet/tor network collision domain, where the Tor nodes can sit nicely together 
#	This is primarily for ease of access, so we don't need lots of additional routing rules of they were on separate networks. 
router3[1]=tornet
dirauth1[0]=tornet
dirauth2[0]=tornet
dirauth3[0]=tornet
relay1[0]=tornet
relay2[0]=tornet
relay3[0]=tornet
relay4[0]=tornet
relay5[0]=tornet
